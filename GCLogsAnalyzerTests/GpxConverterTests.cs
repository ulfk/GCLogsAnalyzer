using GCLogsAnalyzer;
using NFluent;

namespace GCLogsAnalyzerTests;

[TestClass]
public class GpxConverterTests
{
    [TestMethod]
    public void BasicLogsTest()
    {
        const string xmlInput = @"<?xml version=""1.0"" encoding=""utf-8""?>
<gpx xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" version=""1.0"" xsi:schemaLocation=""http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd"" creator=""Groundspeak Pocket Query"" xmlns=""http://www.topografix.com/GPX/1/0"">
  <name>My Finds Pocket Query</name>
  <desc>Geocache file generated by Groundspeak</desc>
  <author>Groundspeak</author>
  <email>contact@geocaching.com</email>
  <time>2023-05-19T15:15:56.8524187Z</time>
  <keywords>cache, geocache, groundspeak</keywords>
  <bounds minlat=""28.070283"" minlon=""-123.1525"" maxlat=""71.17065"" maxlon=""25.967633"" />
  <wpt lat=""53.536483"" lon=""10.19585"">
    <time>2006-09-11T00:00:00</time>
    <name>GCY8YA</name>
    <desc>Stormarnsche Kreisbahn 3 by elmarheissler, Traditional Cache (1.0/1.5)</desc>
    <url>https://coord.info/GCY8YA</url>
    <urlname>Stormarnsche Kreisbahn 3</urlname>
    <sym>Geocache Found</sym>
    <type>Geocache|Traditional Cache</type>
    <groundspeak:cache id=""461416"" archived=""True"" available=""False"" xmlns:groundspeak=""http://www.groundspeak.com/cache/1/0/1"">
      <groundspeak:name>Stormarnsche Kreisbahn 3</groundspeak:name>
      <groundspeak:placed_by>elmarheissler</groundspeak:placed_by>
      <groundspeak:owner id=""176201"">elmarheissler</groundspeak:owner>
      <groundspeak:type>Traditional Cache</groundspeak:type>
      <groundspeak:container>Micro</groundspeak:container>
      <groundspeak:attributes>
        <groundspeak:attribute id=""42"" inc=""1"">Needs maintenance</groundspeak:attribute>
        <groundspeak:attribute id=""1"" inc=""1"">Dogs</groundspeak:attribute>
        <groundspeak:attribute id=""13"" inc=""1"">Available 24/7</groundspeak:attribute>
        <groundspeak:attribute id=""7"" inc=""1"">Takes less than one hour</groundspeak:attribute>
        <groundspeak:attribute id=""32"" inc=""1"">Bicycles</groundspeak:attribute>
        <groundspeak:attribute id=""15"" inc=""1"">Available in winter</groundspeak:attribute>
      </groundspeak:attributes>
      <groundspeak:difficulty>1.0</groundspeak:difficulty>
      <groundspeak:terrain>1.5</groundspeak:terrain>
      <groundspeak:country>Germany</groundspeak:country>
      <groundspeak:state>Schleswig-Holstein</groundspeak:state>
      <groundspeak:short_description html=""False"">
      </groundspeak:short_description>
      <groundspeak:long_description html=""False"">Ein Cache an der Strecke der Stormarnschen Kreisbahn zwischen Glinde und Havighorst

Informationen zur Bahn:
http://www.suedstormarnsche-kreisbahn.de/

Achtung: Hin und wieder fährt auf dieser Strecke noch ein Zug. Das Betreten der Gleise ist zum finden des Caches allerdings nicht notwenig!

Viel Spaß bei der Suche!</groundspeak:long_description>
      <groundspeak:encoded_hints>P</groundspeak:encoded_hints>
      <groundspeak:logs>
        <groundspeak:log id=""68894744"">
          <groundspeak:date>2009-04-19T19:00:00Z</groundspeak:date>
          <groundspeak:type>Found it</groundspeak:type>
          <groundspeak:finder id=""4711"">test-user</groundspeak:finder>
          <groundspeak:text encoded=""False"">Auf einer schönen Radtour nach Bergedorf gefunden! 

Das Logbuch war komplett durchweicht und die Dose feucht. Wir haben die Dose getrocknet und einen neuen Logstreifen spendiert.

TFTC!</groundspeak:text>
        </groundspeak:log>
      </groundspeak:logs>
    </groundspeak:cache>
  </wpt>
  <wpt lat=""53.550167"" lon=""9.984417"">
    <time>2006-04-05T00:00:00</time>
    <name>GCV8EZ</name>
    <desc>Zum DPV by ng world, Traditional Cache (2.0/1.0)</desc>
    <url>https://coord.info/GCV8EZ</url>
    <urlname>Zum DPV</urlname>
    <sym>Geocache Found</sym>
    <type>Geocache|Traditional Cache</type>
    <groundspeak:cache id=""371598"" archived=""True"" available=""False"" xmlns:groundspeak=""http://www.groundspeak.com/cache/1/0/1"">
      <groundspeak:name>Zum DPV</groundspeak:name>
      <groundspeak:placed_by>ng world</groundspeak:placed_by>
      <groundspeak:owner id=""453044"">ng world</groundspeak:owner>
      <groundspeak:type>Traditional Cache</groundspeak:type>
      <groundspeak:container>Micro</groundspeak:container>
      <groundspeak:attributes>
        <groundspeak:attribute id=""42"" inc=""1"">Needs maintenance</groundspeak:attribute>
      </groundspeak:attributes>
      <groundspeak:difficulty>2.0</groundspeak:difficulty>
      <groundspeak:terrain>1.0</groundspeak:terrain>
      <groundspeak:country>Germany</groundspeak:country>
      <groundspeak:state>Hamburg</groundspeak:state>
      <groundspeak:short_description html=""False"">
      </groundspeak:short_description>
      <groundspeak:long_description html=""False"">long cache description</groundspeak:long_description>
      <groundspeak:encoded_hints>im Handlauf zur Rechten</groundspeak:encoded_hints>
      <groundspeak:logs>
        <groundspeak:log id=""1234"">
          <groundspeak:date>2023-01-02T20:00:00Z</groundspeak:date>
          <groundspeak:type>Found it</groundspeak:type>
          <groundspeak:finder id=""4711"">TestUser</groundspeak:finder>
          <groundspeak:text encoded=""False"">log-text</groundspeak:text>
        </groundspeak:log>
      </groundspeak:logs>
    </groundspeak:cache>
  </wpt>
</gpx>";

        // Arrange
        var gpxConverter = new GpxConverter();
        using var stream = GenerateStreamFromString(xmlInput);

        // Act
        gpxConverter = gpxConverter.Parse(stream);

        // Assert
        Check.That(gpxConverter).IsNotNull();
        Check.That(gpxConverter.FoundLogs).IsNotNull();
        Check.That(gpxConverter.FoundLogs.Count).Equals(2);
        //TODO add more checks
    }

    private static Stream GenerateStreamFromString(string s)
    {
        var stream = new MemoryStream();
        var writer = new StreamWriter(stream);
        writer.Write(s);
        writer.Flush();
        stream.Position = 0;
        return stream;
    }
}